name: ARM GCC+LLD Build

on:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        sudo apt-get update
        sudo apt-get install -y flex bison ncurses-dev texinfo gcc gperf patch libtool automake g++ libncurses5-dev gawk subversion expat libexpat1-dev python-all-dev binutils-dev bc libcap-dev autoconf libgmp-dev build-essential pkg-config libmpc-dev libmpfr-dev autopoint gettext txt2man liblzma-dev libssl-dev libz-dev mercurial wget tar gcc-10 g++-10 cmake zstd ninja-build lz4 liblz4-tool liblz4-dev lzma --fix-broken --fix-missing
    - name: Set build date
      id: get-date
      run: |
        sudo timedatectl set-timezone Asia/Jakarta
        echo ::set-output name=date::$(/bin/date -u "+%Y%m%d")
    - name: Build & Push
      run: |
        alias gcc=gcc-10
        alias g++=g++-10
        git config --global user.name "${GITHUB_USER}"
        git config --global user.email "${GITHUB_EMAIL}"
        git clone https://"${GITHUB_USER}":"${GITHUB_TOKEN}"@github.com/mvaisakh/gcc-arm ../gcc-arm -b gcc-pull-requests
        rm -rf ../gcc-arm/*
        chmod a+x build-*.sh
        ./build-gcc.sh -a arm
        sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
        ./build-lld.sh -a arm
        script_dir=$(pwd)
        cd ../gcc-arm
        ./bin/arm-eabi-gcc -v 2>&1 | tee /tmp/gcc-arm-version
        ./bin/arm-eabi-ld.lld -v 2>&1 | tee /tmp/lld-arm-version
        bash "$script_dir/strip-binaries.sh"
        git add . -f
        git commit -as -m "Import ARM GCC ${{ steps.get-date.outputs.date }}" -m "Build completed on: $(/bin/date)" -m "Configuration: $(/bin/cat /tmp/gcc-arm-version)" -m "LLD: $(/bin/cat /tmp/lld-arm-version)"
        git gc
        git push origin gcc-pull-requests -f
      env:
        GITHUB_EMAIL: ${{ secrets.EMAIL }}
        GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
        GITHUB_USER: ${{ secrets.USERNAME }}
    - uses: yanzay/notify-telegram@v0.1.0
      if: always()
      with:
        chat: ${{ secrets.CHAT }} # user id or channel name secret
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }} # token secret
        status: ${{ job.status }} # do not modify this line
